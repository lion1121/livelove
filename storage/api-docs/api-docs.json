{
    "swagger": "2.0",
    "info": {
        "title": "Livelove API",
        "description": "Livelove API",
        "termsOfService": "",
        "contact": {
            "email": ""
        },
        "version": "1.0.0"
    },
    "host": "localhost",
    "basePath": "/",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register new user",
                "description": "Register new user",
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Post user name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "body",
                        "description": "Post user phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return token"
                    },
                    "422": {
                        "description": "User with this phone has already been registered"
                    }
                }
            }
        },
        "/api/user/smsverify ": {
            "post": {
                "tags": [
                    "SmsVerify"
                ],
                "summary": "Compare sms",
                "description": "Compare sms wich was recived from Nexmo service and compare with code in DB.\n     * if code is equal to recived sms and time diference between them not more then 5 minutes response user data",
                "parameters": [
                    {
                        "name": "code",
                        "in": "body",
                        "description": "Post sms code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer <token>",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return user data"
                    },
                    "422": {
                        "description": "sms code is not valid"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login user",
                "description": "Login user",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "description": "Post user phone",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return user token"
                    },
                    "422": {
                        "description": "User with this phone doesn't exist"
                    }
                }
            }
        },
        "/api/users/id": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Show users profile",
                "description": "Show users profile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Get user id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return user data"
                    },
                    "401": {
                        "description": "Unregistered user"
                    }
                }
            }
        },
        "/api/users/edit/id": {
            "post": {
                "tags": [
                    "Edit users Profile"
                ],
                "summary": "Edit users profile",
                "description": "Show users profile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Get user id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Users name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "body",
                        "description": "Users phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "name": "biography",
                        "in": "body",
                        "description": "Users biography",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "body",
                        "description": "Users position",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "type": "string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return user data"
                    },
                    "401": {
                        "description": "Unregistered user"
                    }
                }
            }
        }
    },
    "definitions": {}
}